import random as rand
from time import sleep

#Klass som håller information om spelarens egenskper.
class Player():
    def __init__(self, strength, inventory, level, player_name, hp, xp):
        self.strength = strength
        self.inventory = inventory
        self.level = level
        self.player_name = player_name
        self.hp = hp
        self.xp = xp


    def Player_name(self):
       self.player_name = input("Vad heter du? -> ")

    def introduce(self):
        print("Du heter", self.player_name)

        
#Klass som håller koll på föremålens egenskaper.
class Item():
    def init(self, name, strength_bonus):
        self.name = name
        self.strength_bonus = strength_bonus

Pinne_Item = Item("Pinne", 1)
Stekpanna_Item = Item("Stekpanna",2)
Spjut_Item = Item("Spjut", 3)
Yxa_Item = Item("Yxa", 4)
Pilbåge_Item = Item("Pilbåge", 5)
Trollstav_Item = Item("Trollstav", 6)
Pepparsprej_Item = Item("Pepparsprej",7)


#Funktion som slumpar fram händelser när man hittar en kista
def Händelser():
    händelse = rand.randint(2, 6)
    if händelse == 6:
        sleep(1)
        print("HJÄÄÄLP! Du öppnade kistan och blev vettskrämd av ett spöke som legat instängd där i flera år. Som tur var klarade du dig från att bli skadad, men du kanske bör vila ett tag för att lugna ner dig.")
    if händelse == 5:
        T_Player.hp = T_Player.hp + 5
        sleep(1)
        print("Wow! Du öppnade kistan och åt en läkande blomma som gav dig +5 hp.")
    if händelse == 4:
        T_Player.xp = T_Player.xp + 4
        sleep(1)
        print("Hurra! Du öppnade kistan och hittade en magisk häxbok, du får 25 xp")
    if händelse == 3:
        T_Player.hp = T_Player.hp - 1
        sleep(1)
        print("Oj! Du gjorde ett tappert försök att öppna kistan.. DU KLÄMDE FINGRET!!! Attans bananer! Du förlorade 2 hp. Bättre lycka nästa gång {name}.")
    if händelse == 2:
        current_hp = current_hp + 3
        sleep(1)
        print("Härligt! Du öppnade kistan och fann ett bandage som gav dig +3 hp.")


#funktion som innehåller slagsmål med monster
def monster():
    monster_hp = rand.randint(1, 20)
    monster_strength = rand.randint(1, 20)
    if monster_hp < 8:
        monster = "slime"
    elif monster_hp > 14:
        monster = "drake"
    else:
        monster = "zombie"
    sleep(1)
    print(f"Det är en {monster} med {monster_hp} hp och styrka {monster_strength}!")
    sleep(2)

    while True:
        if T_Player.strength < monster_strength:
            spelare_attack = rand.randint(1,5)
            monster_attack = rand.randint(5,10)
        elif T_Player.strength == monster_strength:
            spelare_attack = rand.randint(4,7)
            monster_attack = rand.randint(4,7)
        else:
            spelare_attack = rand.randint(5,10)
            monster_attack = rand.randint(1,5)

        print("Du attackerar")
        sleep(1)
        monster_hp = monster_hp - spelare_attack
        print(f"{monster.title()}n förlorar {spelare_attack} hp!") 
        sleep(1)
            
        if monster_hp <= 0:
            print(f"Du besegrade {monster}n")
            break
        else:
            print(f"{monster.title()}n har nu {monster_hp} hp!")

        sleep(1)
        print(f"{monster.title()}n attackerar och du förlorar {monster_attack} hp!")
        T_Player.hp = T_Player.hp - monster_attack
        sleep(1)
        print(f"Du har nu {T_Player.hp} hp")
        sleep(1)
    

#funktion som slumpar fram hur mycket hp man förlorar när spelaren går in i en fälla.
def fälla():
    sleep(1)
    fälla_attack = rand.randint(1, 7)
    print(f"Du märker inte av fällan och går rakt in i den")
    T_Player.hp = T_Player.hp - fälla_attack
    sleep(1)
    print(f"Du förlorar {fälla_attack} hp!")
    sleep(1)

#listor som används i programmet
svars_alternativ = ["Vänster", "Höger", "Framåt", "vänster", "höger", "framåt"]
monster_typ = ['slime', 'zombie', 'drake']


#Introduktion till spelet och spelarens namn.
T_Player = Player(10,1,1,"name",50, 0)
T_Player.Player_name()
sleep(1)
T_Player.introduce()

#Spelets fullständiga loop
while True:
    sleep(1)
    svar_meny = input("Vad vill du göra? (Ryggsäck, Egenskaper, Utforska) -> ")
    svar_meny = svar_meny.lower()
    if svar_meny == "utforska":
        while True:
            sleep(1)
            svar = str(input("Vilket håll vill du gå? (Vänster, Höger, Framåt) -> "))
            if svar in svars_alternativ:
                break
            else:
                sleep(1)
                print("Ogiltigt svar, försök igen.")
                continue

#Loopen som avgör händelsen om valet i den tidigare loopen är "Utforska".
        while True:
            händelse = rand.randint(0, 3)
            if svar in svars_alternativ:
                if händelse == 3:
                    sleep(1)
                    print(f"Du gick {svar}, där inne finns ett monster.")
                    monster()
                    break
                if händelse == 2:
                    sleep(1)
                    print(f"Du gick {svar}, där inne finns en fälla.")
                    fälla()
                    break
                if händelse == 1:
                    sleep(1)
                    print(f"Du gick {svar}, där inne finns en kista.")
                    Händelser()
                    break


#Spelarens egenskaper radas upp
    elif svar_meny == "egenskaper":
        sleep(1)
        print(f"Egenskaper för {T_Player.player_name}:")
        sleep(1)
        print(f"Hp = {T_Player.hp}")
        sleep(1)
        print(f"Styrka = {T_Player.strength}")
        sleep(1)
        print(f"Level = {T_Player.level}")
        continue

#Spelarens items radas upp
    elif svar_meny == "ryggsäck":
        sleep(1)
        print("tbc")
        continue

#Om det angivna svaret är ogiltigt, loopen startar om
    else:
        sleep(1)
        print("Ogiltigt svar, försök igen")
        continue
